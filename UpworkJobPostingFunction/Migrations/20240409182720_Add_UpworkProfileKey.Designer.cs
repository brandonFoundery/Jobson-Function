// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Jobson.Models;

#nullable disable

namespace Jobson.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240409182720_Add_UpworkProfileKey")]
    partial class Add_UpworkProfileKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UpworkJobPostingFunction.Models.Job", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BatchRunTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloBoardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloBoardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloCardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloCardShortUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloCardUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrelloListName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.HasIndex("ProfileTypeId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.LLMModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LlmProviderType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LLMModels");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.LLMPrompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LLMPromptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LLMProviderId")
                        .HasColumnType("int");

                    b.Property<string>("PromptText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LLMProviderId");

                    b.ToTable("LLMPrompts");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.ProfileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfileTypes");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.UpworkProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpworkProfileKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileTypeId");

                    b.ToTable("UpworkProfiles");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.UpworkRssFeedUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileTypeId");

                    b.ToTable("UpworkRssFeedUrls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Expert Asp.Net Jobs",
                            ProfileTypeId = 0,
                            Url = "https://www.upwork.com/ab/feed/jobs/rss?amount=1000-4999&category2_uid=531770282580668418&contractor_tier=3&paging=0-10&q=asp.net&sort=recency&t=1&api_params=1&securityToken=a833c2c7918b7c7527f8e8deb3174ff06d3b39c6ac7621b2fd95dae3cf913e71113798900e6bfb6cd1798607d8a5c339f6bb29f2b424395cb19dbefbf4fd0041&userUid=1750194899056226304&orgUid=1750194899056226305"
                        });
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.Job", b =>
                {
                    b.HasOne("UpworkJobPostingFunction.Models.ProfileType", "ProfileType")
                        .WithMany()
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileType");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.LLMPrompt", b =>
                {
                    b.HasOne("UpworkJobPostingFunction.Models.LLMModel", "LLMProvider")
                        .WithMany()
                        .HasForeignKey("LLMProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LLMProvider");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.UpworkProfile", b =>
                {
                    b.HasOne("UpworkJobPostingFunction.Models.ProfileType", "ProfileType")
                        .WithMany()
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileType");
                });

            modelBuilder.Entity("UpworkJobPostingFunction.Models.UpworkRssFeedUrl", b =>
                {
                    b.HasOne("UpworkJobPostingFunction.Models.ProfileType", "ProfileType")
                        .WithMany()
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileType");
                });
#pragma warning restore 612, 618
        }
    }
}
